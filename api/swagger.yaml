# this is an example of the Cool Tasks Service API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: Cool Tasks Service API
  version: 1.0.0
schemes:
  - http
host: localhost:8080
basePath: /v1
produces:
  - application/json
consumes:
  - application/json
paths:
  /hello-world:
    get:
      summary: Hello World
      tags:
        - welcome page
      responses:
        '200':
          description: Hello World
          schema:
            $ref: '#/definitions/HelloWorldResponse'
  /login:
    post:
      summary: Login method, creates user session
      tags:
        - login
      responses:
        200:
          description: Session successfully created
          shema:
            required:
             - user login
             - user password
        418:
          description: Login failed
  /logout:
    post:
      summary: Close session by ID
      tags:
        - logout
      responses:
        200:
          description: Successfull logout
        418: Error
  /users:
    get:
      summary: Get all users info
      tags:
      - login
      responses:
        200:
          description: All users send to client
        404:
          description: Can't get users
    post:
      summary: Add user
      tags:
      - login
      responses:
       200:
        description: User added
        shema:
          required:
          - user name
          - user login
          - user password
       404:
        description: Can't add this user
  /users{id}:
    get:
      summary: Get all users info
        tags:
        - login
        responses:
          200:
            description: All users send to client
          404:
            description: Can't get users
    delete:
  /tasks:
    get:
      summary: Get all users info
      tags:
      - login
      responses:
        200:
          description: All users send to client
        404:
          description: Can't get users
    post:
      summary: Add user
      tags:
      - login
      responses:
       200:
        description: User added
        shema:
          required:
          - user ID
          - user name
          - time
          - creation time
          - update time
          - description
       404:
        description: Can't add this task
  /tasks{id}:
    get:
    summary: Get Task by ID
      tags:
      - tasks
      responses:
       200:
        description: Send task by it's ID
        shema:
          required:
          - Task ID
       404:
        description: Can't find task
    delete:
definitions:
  HelloWorldResponse:
    type: object
    properties:
      message:
        type: string
        description: Hello World
